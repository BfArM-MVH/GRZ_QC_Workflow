/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: METADATA_TO_SAMPLESHEET {
        publishDir = [
            path:"${params.outdir}",
            mode: params.publish_dir_mode]
    }
    withName: BWAMEM2_MEM {
        ext.prefix ={["${meta.id}",
                    (meta.laneId)      ? ".${meta.laneId}_" : '',
                    (meta.flowcellId)  ? ".${meta.flowcellId}_" : '',
                    ].join('').trim()
                    }
        ext.args   = { "-R \'${meta.read_group}\'" }
    }
    withName: SAVE_REFERENCE {
        publishDir = [
            path: params.save_reference_path ? params.save_reference_path : params.outdir,
            mode: params.publish_dir_mode,
            pattern: "reference/*"
        ]
    }
    withName: BWAMEM2_INDEX {
        ext.prefix = { "${meta.id}" }
    }
    withName: SAMTOOLS_FAIDX {
        ext.prefix = { "${meta.id}" }
    }
    withName: SAMTOOLS_INDEX {
        ext.prefix = { "${meta.id}" }
    }
    withName: SAMTOOLS_FLAGSTAT {
        ext.prefix = { "${meta.id}" }
    }
    withName: SAMTOOLS_IDXSTATS {
        ext.prefix = { "${meta.id}" }
    }
    withName: FASTQC {
        ext.prefix ={["${meta.id}",
                    (meta.laneId)      ? ".${meta.laneId}_" : '',
                    (meta.flowcellId)  ? ".${meta.flowcellId}_" : '',
                    ].join('').trim()
                    }
        ext.args = '--quiet'
    }
    withName: FASTP {
        ext.prefix ={["${meta.id}",
                    (meta.laneId)      ? ".${meta.laneId}_" : '',
                    (meta.flowcellId)  ? ".${meta.flowcellId}_" : '',
                    ].join('').trim()
                    }
    }
    withName: MULTIQC {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: SAMTOOLS_MERGE {
        ext.prefix = { "${meta.id}" }
    }
    withName: SAMBAMBA_MARKDUP {
        scratch = true
        ext.prefix = { "${meta.id}.md" }
        publishDir = [
            path: {"${params.outdir}/${meta.id}/alignments/"},
            mode: params.publish_dir_mode,
            pattern: "*.bam"
            ]
    }
    withName: MOSDEPTH {
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path: {"${params.outdir}/${meta.id}/mosdepth/"},
            pattern: "*{.bed.gz,.summary.txt}",
            mode: params.publish_dir_mode
        ]
    }
    withName: CONVERT_BED_CHROM {
        ext.prefix = { "${meta.id}" }
    }
    withName: CALCULATE_BASEQUALITY {
        ext.prefix = { "${meta.id}" }
    }
    withName: COMPARE_THRESHOLD {
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path: {"${params.outdir}/${meta.id}/compare_threshold/"},
            pattern: "*{.csv}",
            mode: params.publish_dir_mode
        ]
    }
    withName: MERGE_REPORTS {
        ext.prefix = { "${meta.id}" }
        publishDir = [
            path:"${params.outdir}",
            pattern: "report.{csv,xlsx}",
            mode: params.publish_dir_mode
        ]
    }
}
