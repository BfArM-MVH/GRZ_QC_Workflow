name: Run nf-test
on:
  push:
    paths-ignore:
      - "docs/**"
      - "**/meta.yml"
      - "**/*.md"
      - "**/*.png"
      - "**/*.svg"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/meta.yml"
      - "**/*.md"
      - "**/*.png"
      - "**/*.svg"
  workflow_dispatch:
    inputs:
      runners:
        description: "Runners to test on"
        type: choice
        options:
          - "ubuntu-latest"
          - "self-hosted"
        default: "ubuntu-latest"

# Cancel if a newer run is started
# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NFT_DIFF: "pdiff"
  NFT_DIFF_ARGS: "--line-numbers --width 120 --expand-tabs=2"
  # renovate: datasource=github-releases depName=askimed/nf-test versioning=semver
  NFT_VER: "0.9.2"
  NFT_WORKDIR: ${{ github.workspace }}
  NXF_ANSI_LOG: false
  NXF_SINGULARITY_CACHEDIR: ${{ github.workspace }}/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity
  MINI_TEST_VER: "0.2.1"

jobs:
  nf-test-changes:
    name: nf-test-changes
    runs-on: ${{ github.event.inputs.runners || github.run_number > 1 && 'ubuntu-latest' || 'self-hosted' }}
    outputs:
      shard: ${{ steps.set-shards.outputs.shard }}
      total_shards: ${{ steps.set-shards.outputs.total_shards }}
    steps:
      - name: Clean Workspace # Purge the workspace in case it's running on a self-hosted runner
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: get number of shards
        id: set-shards
        uses: ./.github/actions/get-shards
        env:
          NFT_VER: ${{ env.NFT_VER }}
        with:
          max_shards: 7

      - name: debug
        run: |
          echo ${{ steps.set-shards.outputs.shard }}
          echo ${{ steps.set-shards.outputs.total_shards }}

  nf-test:
    runs-on: ${{ github.event.inputs.runners || github.run_number > 1 && 'ubuntu-latest' || 'self-hosted' }}
    name: "${{ matrix.profile }} | ${{ matrix.NXF_VER }} | ${{ matrix.shard }}/${{ needs.nf-test-changes.outputs.total_shards }}"
    needs: [nf-test-changes]
    if: ${{ needs.nf-test-changes.outputs.total_shards != '0' }}
    strategy:
      fail-fast: false
      matrix:
        shard: ${{ fromJson(needs.nf-test-changes.outputs.shard) }}
        profile: [conda, docker, singularity]
        NXF_VER:
          # renovate: datasource=github-releases depName=nextflow/nextflow versioning=semver
          - "25.04.2"

    env:
      NXF_ANSI_LOG: false
      TOTAL_SHARDS: ${{ needs.nf-test-changes.outputs.total_shards }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Download mini-test data
        run: |
          mkdir -p grz-mini-test-data
          # references
          curl -L "https://github.com/twrightsman/grz-mini-test-data/releases/download/version%2F${MINI_TEST_VER}/references.tgz" |
            tar -xzC grz-mini-test-data/
          for ds in panel wgs wgs_lr; do
            mkdir -p "grz-mini-test-data/submissions/${ds}"
            curl -L "https://github.com/twrightsman/grz-mini-test-data/releases/download/version%2F${MINI_TEST_VER}/${ds}.tgz" |
              tar -xzC "grz-mini-test-data/submissions/${ds}"
          done

      - name: Run nf-test
        uses: ./.github/actions/nf-test
        env:
          NFT_DIFF: ${{ env.NFT_DIFF }}
          NFT_DIFF_ARGS: ${{ env.NFT_DIFF_ARGS }}
          NFT_WORKDIR: ${{ env.NFT_WORKDIR }}
        with:
          profile: ${{ matrix.profile }}
          shard: ${{ matrix.shard }}
          total_shards: ${{ env.TOTAL_SHARDS }}

      - name: Debug nf-test outputs
        if: always()
        run: |
          echo "::group::Environment"
          echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
          echo "HOME             = $HOME"
          echo "NFT_WORKDIR      = ${NFT_WORKDIR:-'(unset)'}"
          echo "::endgroup::"

          # ---------- $NFT_WORKDIR/tests ----------
          echo "::group::\$NFT_WORKDIR/tests"
          [ -n "$NFT_WORKDIR" ] && find "$NFT_WORKDIR/tests" -maxdepth 6 -type f 2>/dev/null | sed 's/^/  /' || echo "  (not found)"
          echo "::endgroup::"

          # ---------- literal ~/tests inside workspace ----------
          echo "::group::workspace/~/tests"
          if [ -d "$GITHUB_WORKSPACE/~/tests" ]; then
            find "$GITHUB_WORKSPACE/~/tests" -maxdepth 6 -type f | sed 's/^/  /'
          else
            echo "  (no ~/tests dir under workspace)"
          fi
          echo "::endgroup::"

          # ---------- workspace/tests (if you switch workdir) ----------
          echo "::group::workspace/tests"
          [ -d "$GITHUB_WORKSPACE/tests" ] && find "$GITHUB_WORKSPACE/tests" -maxdepth 6 -type f | sed 's/^/  /' || echo "  (not found)"
          echo "::endgroup::"

          # ---------- TAP file ----------
          echo "::group::TAP file"
          find . -name test.tap -type f -print -exec head -n 5 {} \;
          echo "::endgroup::"

      - name: Upload nf-test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: nf-test_${{ matrix.profile }}_${{ matrix.shard }}
          path: |
            tests/*/output/pipeline_info/*
            tests/*/output/multiqc/multiqc_report.html

  confirm-pass:
    runs-on: ${{ github.event.inputs.runners || github.run_number > 1 && 'ubuntu-latest' || 'self-hosted' }}
    needs: [nf-test]
    if: always()
    steps:
      - name: One or more tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: One or more tests cancelled
        if: ${{ contains(needs.*.result, 'cancelled') }}
        run: exit 1

      - name: All tests ok
        if: ${{ contains(needs.*.result, 'success') }}
        run: exit 0

      - name: debug-print
        if: always()
        run: |
          echo "::group::DEBUG: `needs` Contents"
          echo "DEBUG: toJSON(needs) = ${{ toJSON(needs) }}"
          echo "DEBUG: toJSON(needs.*.result) = ${{ toJSON(needs.*.result) }}"
          echo "::endgroup::"

      - name: Clean Workspace # Purge the workspace in case it's running on a self-hosted runner
        if: always()
        run: |
          ls -la ./
          rm -rf ./* || true
          rm -rf ./.??* || true
          ls -la ./
